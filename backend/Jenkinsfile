pipeline {
  agent any

  environment {
    APP_DIR = "/home/ubuntu/ares2-app/backend"
    VENV    = "/home/ubuntu/ares2-app/backend/venv"
  }

  options { timestamps() }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Sync Backend Code') {
      steps {
        sh """
          rsync -a --delete ./backend/ ${APP_DIR}/
        """
      }
    }

    stage('Install Python Deps') {
      steps {
        sh """
          # Reuse existing venv or create if missing
          python3 -m venv ${VENV} || true
          . ${VENV}/bin/activate
          pip install --upgrade pip
          pip install -r ${APP_DIR}/requirements.txt
        """
      }
    }

    stage('Restart Flask') {
      steps {
        sh '''
          export NVM_DIR="/home/ubuntu/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
          export PATH="$NVM_DIR/versions/node/$(node -v)/bin:$PATH"

          pm2 start "python3 app.py" --name flask-app || true
          pm2 restart flask-app
          pm2 save
        '''
      }
    }
  }

  post {
    success { echo 'Flask backend deployed' }
    failure { echo 'Flask backend failed' }
  }
}
